<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Joker's</title>
    <description>Lady luck favors the one who tries.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 28 Jan 2018 16:41:55 +0800</pubDate>
    <lastBuildDate>Sun, 28 Jan 2018 16:41:55 +0800</lastBuildDate>
    <generator>Jekyll v3.4.0</generator>
    
      <item>
        <title>我的后端打怪升级之路一：注解</title>
        <description>&lt;p&gt;大约有一个月没写博啦，中间经历了急性支气管炎、大雪封山、懒癌附身种种，这次想写的是「注解」，一个之前一直很惧怕的东西。&lt;/p&gt;

&lt;p&gt;起因是跟着&lt;a href=&quot;https://www.jianshu.com/p/0beee8e3d397&quot;&gt;【手把手】JavaWeb 入门级项目实战 – 文章发布系统 （第四节）&lt;/a&gt;这篇博文在做入门的 jsp 项目，所以接触到了。接触到了，自然就要了解一下。部分内容出自原博客，侵删。&lt;/p&gt;

&lt;p&gt;我是后端新手，以前完全没接触过后端项目，所以做的时候理解上会有问题，同时我也想把自己遇到的这些问题，用浅显易懂的方式说出来，可以供有相同疑惑的朋友参考。如有不足之处，欢迎指正。&lt;/p&gt;

&lt;p&gt;这篇文章可能有点长，但写的应该比较容易看懂，如果你也是新手，希望你能看到最后，不明白的部分可以留言给我讨论。文章整体脉络应该是比较清晰：首先介绍&lt;code class=&quot;highlighter-rouge&quot;&gt;注解是什么&lt;/code&gt;，然后再看&lt;code class=&quot;highlighter-rouge&quot;&gt;注解的定义&lt;/code&gt;，最后是&lt;code class=&quot;highlighter-rouge&quot;&gt;如何使用&lt;/code&gt;，把这些讲完之后我又举了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;完整的实例&lt;/code&gt;来讲解。&lt;/p&gt;

&lt;h3 id=&quot;注解是什么&quot;&gt;注解是什么&lt;/h3&gt;
&lt;p&gt;原博主写了一篇文章非常好，推荐仔细看一遍：&lt;a href=&quot;http://www.cnblogs.com/skyblue-li/p/5900228.html&quot;&gt;用大白话聊聊JavaSE – 自定义注解入门&lt;/a&gt;。我看了三遍，才感觉理解个差不多。&lt;/p&gt;

&lt;p&gt;我简单总结一下原博主的思想：注解就像是写给电脑看的注释，有了注解，我们可以通过代码来获得关于一个方法或者一个类的信息。在平时的开发过程中，我们会给一个类、方法或者域添加注释，比如，我们会在方法前面添加关于入参、返回值、以及方法作用的注释。同样的，我们可以给一个类、方法或者域添加注解。&lt;/p&gt;

&lt;p&gt;同时，你仔细观察的话，会发现注解非常像一个空的接口。&lt;/p&gt;

&lt;p&gt;了解了这些内容，我来介绍一下&lt;code class=&quot;highlighter-rouge&quot;&gt;元注解&lt;/code&gt;的概念。典型的元注解有 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Target&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Retention&lt;/code&gt; ，这是我们在定义一个注解时需要用到的，&lt;/p&gt;

&lt;p&gt;@Target 用来定义你的注解用在什么地方：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Target(ElementType.FIELD)&lt;/code&gt; 表示用于一个域&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Target(ElementType.METHOD)&lt;/code&gt; 表示用于一个方法&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Target(ElementType.TYPE)&lt;/code&gt; 则表示用于一个类。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;@Retention 用来定义注解在哪一个级别可用：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Retention(RetentionPolicy.SOURCE)&lt;/code&gt; 表示在源代码中可用&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Retention(RetentionPolicy.CLASS)&lt;/code&gt; 表示在类文件中可用&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Retention(RetentionPolicy.RUNTIME)&lt;/code&gt; 表示在运行时可用，一般用的比较多。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;注解怎么写&quot;&gt;注解怎么写&lt;/h3&gt;
&lt;p&gt;下面让我们来看一下注解的格式，我们参照原作者的方式，来给方法写一个注解：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.lang.annotation.ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.lang.annotation.Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.lang.annotation.RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.lang.annotation.Target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;METHOD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RUNTIME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MethodAnnotation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 方法作用，有默认值&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;作者很懒，没有写本方法的作用&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 方法创建时间&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;很显然，我们可以通过这个注解来获取方法的作用和创建时间，当然，我们也可以加上作者，无非是再加这么一行：&lt;code class=&quot;highlighter-rouge&quot;&gt;String author() default &quot;Joker&quot;;&lt;/code&gt;。此外，在定义注解的过程中，默认值是可选的。&lt;/p&gt;

&lt;h3 id=&quot;注解如何用&quot;&gt;注解如何用&lt;/h3&gt;
&lt;p&gt;好，通过上面两部分，我们已经了解了注解是什么，以及如何写一个简单的注解，接下来看一看注解是怎么用的。这要分为两部分来说。&lt;/p&gt;

&lt;h4 id=&quot;给谁用&quot;&gt;给谁用？&lt;/h4&gt;
&lt;p&gt;既然明白了我们刚刚编写的注解时用来写给方法的，那么我们想获得哪个方法的作用和创建时间呢？&lt;/p&gt;

&lt;p&gt;让我们来随便写一个：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.text.SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DateUtil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@MethodAnnotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2018-01-01&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;formatDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;现在目标明确了，我们是想获得 &lt;code class=&quot;highlighter-rouge&quot;&gt;formatDate&lt;/code&gt; 这个方法的作用和创建时间，那就先给方法加上我们刚刚创建的注解，也就是&lt;code class=&quot;highlighter-rouge&quot;&gt;@MethodAnnotation()&lt;/code&gt;。括号里面要填入注解中对应的参数和值，有默认值的可以不用写。如果参数没有默认值，且在这里没有填写的话（比如在这里只写一个空括号），ide 会报 &lt;code class=&quot;highlighter-rouge&quot;&gt;The annotion @MethodAnnotation must define the attribute createTime&lt;/code&gt;错误。&lt;/p&gt;

&lt;h4 id=&quot;怎么用&quot;&gt;怎么用？&lt;/h4&gt;

&lt;p&gt;计算机如何在 Java 类中获取我们上面定义的注解信息呢？&lt;/p&gt;

&lt;p&gt;那我们不得不聊聊另外一个名词：&lt;code class=&quot;highlighter-rouge&quot;&gt;反射&lt;/code&gt;。我们先来看一个例子（这里我还是使用原作者的例子，侵删），在 DateUtil.java 中创建一个单元测试（main 方法）如下：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NoSuchMethodException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecurityException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classOfDateUtil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classOfDateUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;formatDate&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MethodAnnotation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodNote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnnotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodAnnotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;方法描述：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodNote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;创建日期：&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methodNote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;首先读一下上面的代码，自己想一想，然后再来看我的总结。&lt;/p&gt;

&lt;p&gt;——————————————————————-分割线——————————————————————-&lt;/p&gt;

&lt;p&gt;关于上面的反射过程，我个人总结为四部曲：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;获取类的对象。如果在编译器能够知道名字的话，可以使用上面的方法；如果在编译器不知道类的名字，但是可以在运行期获得到类名字符串的话，可以使用以下方法：
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//在运行期获取的类名字符串&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;根据类对象获得相应的方法/域，如果注解是加在类上的，可以省略这一步。主要方法有（具体用法可以自己去查询 API 文档）：
    &lt;ul&gt;
      &lt;li&gt;Field getField()&lt;/li&gt;
      &lt;li&gt;Field[] getFields() 返回 Field 数组，包括这个类及其父类的公有域。&lt;/li&gt;
      &lt;li&gt;Field[] getDeclaredFields() 返回 Field 数组，包括这个类的所有域。&lt;/li&gt;
      &lt;li&gt;Method getMethod()&lt;/li&gt;
      &lt;li&gt;Method[] getMethods() 返回所有的公有方法，包括从父类继承来的公有方法。&lt;/li&gt;
      &lt;li&gt;Method[] getDeclaredMethods() 返回所有的方法，但不包括由父类继承来的方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;根据获得的域／方法／类对象，结合 getAnnotations() 方法来获取注解的实例。&lt;/li&gt;
  &lt;li&gt;根据注解实例，获取对应的信息。结束！&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;几个注意点&quot;&gt;几个注意点&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;不要漏写 default 值。&lt;/li&gt;
  &lt;li&gt;在第二步时，注意看下用到的方法是否抛出异常。如果有的话，在3中不要忘记抛出。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;看一个完整的例子获取数据库表名&quot;&gt;看一个完整的例子：获取数据库表名&lt;/h3&gt;
&lt;p&gt;这里的情景是，用户在登陆页面上输入了用户名和密码，点登陆的时候，发送请求到我们的 controller 层，此时我们把用户数据封装为一个 JavaBean，再把 JavaBean 转化为建表语句。为了简化过程，最后一步我省略掉，我们只看怎么获取表名即可。&lt;/p&gt;

&lt;p&gt;关于 JavaBean 大家可以看看原博主的这篇文章：&lt;a href=&quot;http://www.cnblogs.com/skyblue-li/p/5900216.html&quot;&gt;用大白话聊聊JavaSE – 如何理解Java Bean（一）&lt;/a&gt;，写的非常好。&lt;/p&gt;

&lt;p&gt;我简单解释一下 JavaBean 和数据库的对应关系：写 JavaBean 的过程其实就相当于是数据库的设计过程，&lt;code class=&quot;highlighter-rouge&quot;&gt;类&lt;/code&gt;对应着&lt;code class=&quot;highlighter-rouge&quot;&gt;表&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;属性&lt;/code&gt;对应着&lt;code class=&quot;highlighter-rouge&quot;&gt;字段&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;第-0-1-步给谁用javabean&quot;&gt;第 0-1 步：给谁用？（JavaBean）&lt;/h4&gt;
&lt;p&gt;既然是用户，我们新建一个 User 类，我只抽了一部分。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUsername&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUsername&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;第-0-2-步注解怎么写定义注解&quot;&gt;第 0-2 步：注解怎么写（定义注解）&lt;/h4&gt;
&lt;p&gt;我们新建一个 Annotation 文件，就叫 Table。&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RUNTIME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;这里把导包过程省略了，请大家自行补充。&lt;/p&gt;

&lt;p&gt;这步做完之后，我们给 0-1 中的 User 类加上注解，参数设置为 t_user，即表名：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;t_user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;第-1-步获取类的对象&quot;&gt;第 1 步：获取类的对象&lt;/h4&gt;
&lt;p&gt;这里我们封装一个 TableUtils 作为数据库表的工具类，来使用注解，真正的调用过程我们在单元测试中进行。在刚刚讲解的过程中，其实是把这两部分合二为一了。在实际开发过程中，可能要将不同的模块分包处理，比如 annotions 包、util 包、bean 包等等。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 作为工具类API使用，直接传入类的对象&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TableUtils&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCreateTablename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 在这里传入类&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestMain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TableUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCreateTablename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;第-2-步获得相应的方法域&quot;&gt;第 2 步：获得相应的方法/域&lt;/h4&gt;
&lt;p&gt;因为我们的注解是加在类上的，所以这一步可以省略。&lt;/p&gt;

&lt;h4 id=&quot;第-3-步获取注解的实例&quot;&gt;第 3 步：获取注解的实例&lt;/h4&gt;
&lt;p&gt;既然是获取注解的实例，肯定是在直接使用注解的地方，也就是 TableUtils 中进行。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCreateTablename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnnotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;        
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;第-4-步获取对应的属性&quot;&gt;第 4 步：获取对应的属性&lt;/h4&gt;
&lt;p&gt;这里我们要获取表名，可以控制台打印下，看看是不是我们的 &lt;code class=&quot;highlighter-rouge&quot;&gt;t_user&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCreateTablename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnnotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;至此，一个完整的注解 demo 完成，感谢大家看到最后～&lt;/p&gt;

&lt;h3 id=&quot;参考链接&quot;&gt;参考链接&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/java-reflection/java-classes.html&quot;&gt;java 类 - 极客学院&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/0beee8e3d397&quot;&gt;【手把手】JavaWeb 入门级项目实战 – 文章发布系统 （第四节）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/skyblue-li/p/5900228.html&quot;&gt;用大白话聊聊JavaSE – 自定义注解入门&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/mysql/create-tables.html&quot;&gt;创建 MySQL 表 - 极客学院&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;《Java 核心技术 5.7 反射》&lt;/li&gt;
  &lt;li&gt;《Java 编程思想 第20章 注解》&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 28 Jan 2018 15:34:11 +0800</pubDate>
        <link>http://localhost:4000/2018/01/%E6%88%91%E7%9A%84%E5%90%8E%E7%AB%AF%E6%89%93%E6%80%AA%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF%E4%B8%80-%E6%B3%A8%E8%A7%A3/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/01/%E6%88%91%E7%9A%84%E5%90%8E%E7%AB%AF%E6%89%93%E6%80%AA%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF%E4%B8%80-%E6%B3%A8%E8%A7%A3/</guid>
        
        <category>JavaWeb</category>
        
        
        <category>Work</category>
        
      </item>
    
      <item>
        <title>2017年终总结&amp;&amp;2018展望</title>
        <description>&lt;p&gt;2017年终这几天过得是真心很惨淡了，一个人在合肥的城市边缘无亲无故，也没有朋友，然后居然。。。病了，好吧，本来也不是什么大病，让自己前期不注意外加情绪不稳定直接拖成了这个烂样子。每天晚上两三点都要从睡梦中咳醒，对，没错，是咳醒，我以前也还不知道有这种失眠法，真心算是很痛苦了，醒了半天也睡不着，只好安慰自己说快睡快睡，明天起来就能好一点了……然后日复一日，感觉已经快有两周了。白天也是咳不停啊喂，能不能行啊，嗓子痒到不行，我服了。&lt;/p&gt;

&lt;p&gt;于是今天晚上强行来了自习室，不能输在2018的起跑线上啊，那不是我。&lt;/p&gt;

&lt;p&gt;真正的我不应该是精力充沛、不屈不挠的么？&lt;/p&gt;

&lt;h3 id=&quot;2017年终总结&quot;&gt;2017年终总结&lt;/h3&gt;
&lt;p&gt;2017和2018对我来说是分外重要的两年。我先来总结下2017，主要说两件大事。&lt;/p&gt;

&lt;h4 id=&quot;实习&quot;&gt;实习&lt;/h4&gt;
&lt;p&gt;在 BAT 进行了一次&lt;strong&gt;不算成功的&lt;/strong&gt;实习。刚开始实习进入XX科技，事实证明在缺少决策过程的情况下做出的选择，很可能对未来发展是不利的。当然那时候也是年少无知，在象牙塔里待得久了以后，以为外面的世界也是如此。今年上半年，我的着眼点是 Android 开发，这是另一个没有过程的决策，仅仅是觉得&lt;strong&gt;有意思&lt;/strong&gt;，这对职业生涯的选择来说确实是过于草率了。&lt;/p&gt;

&lt;p&gt;当然，在去年11月到今年6月的实习过程中，才是真正被虐到以及学到了。首先，自己刚开始不知道大公司的日常冷漠，真的以为互联网公司都是气氛融洽之类的。自己在读大学那会儿人见人称“佳爷”，说来也是很好笑了，都是社团活动造成的假象，而我又没有真正掌握人与人之间交流的精髓，自然是要吃亏。&lt;/p&gt;

&lt;p&gt;有几件事我是没做好的，写出来以示反省：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;本职工作没有做好，也就刚刚打个及格分。这很可怕，进入职场以后，你的本职工作做的情况如何，其实是别人看待你的第一个窗口。我有几次都是拖到 deadline，另外有一次因为联调原因（虽然最后证明不是我的锅，但我没有认真联调也脱不了干系）直接影响测试，然后刚好负责测试的 QA 看我不顺眼，就把我的自测签章打回了，反正是太丢脸了，这里又要说到2和3的问题了，稍后再讨论。&lt;/li&gt;
  &lt;li&gt;人际关系没有处理好。职场上总有些人是特别讨厌的，或者和你合不来的。这个时候你要聪明点，不要硬怼，这是对你没好处的，如果真的遇上了小人，在正面交锋的时候，一定要在不违背原则的基础上尽量让他满意。智者千虑还必有一失，你不知道什么时候会犯错，如果招惹了小人，那到时候后果可能真的够你喝一壶的。像我这样签章被打回，好在我是实习生，如果我是正式员工的话，那怎么年终绩效都好不了了吧。以及在之前实习的时候，因为 leader 对女实习生有多次不妥言论，仗着我要离职又是实习，强怼了，不过后来想想还是蛮可怕的。&lt;/li&gt;
  &lt;li&gt;一定要勤学好问。后来那次长达半年的实习中，我的导师并不怎么管我，刚开始经常一脸懵逼的被叫去开会，时间久了才知道 CR 是什么，需求评审是什么，MRD 是什么，接口评审是什么，showcase 是什么，签章是什么。组里的 Wiki 并不完善，在导师由于事务繁忙没有时间来管我的时候，自己又不问，那只能吃着哑巴亏了。（发现并不是组的问题，后来我快走的时候来了一个实习生，分配的同事就很负责。当然也从侧面反映出，分配什么样的导师并不是你能控制的，但最终的主观能动性还是掌握在你的手里。）做需求的时候也是，导师没告诉过我怎么开始，全靠自己问+google+看同事源码，但刚上手一个4g多的源码，可以说是焦头烂额，那时候多亏一个好心的同事，也算带了我几天，帮我调试代码。非常感谢。借以此告诉自己，有不会的就要及时问，千万不要因为不好意思而拖，尤其正式工作了以后，你刚开始不会还好，应届生嘛，等你慢慢不是应届生了，发现这不会那不会，就更加没办法了。说到这里，想起在今年四五月份，996的那段时间，接过一个需求，结果当时因为不清楚接口设计的原则，有一个字段服务端给不到而我不知道，费了很大的周折，最后真是差点完蛋，又让同事帮忙到凌晨。对于这点，我想说4。&lt;/li&gt;
  &lt;li&gt;要多多关注自己份外的事情，积极参与。自己份外的，包括非自己产品的 Wiki，非自己团队的有权限的代码，非自己负责的需求，非技术类的活动。要尽可能多了解和你的职位有关或无关的一切事情，像我在3中说到的接口问题，如果我能在之前别人接口评审的时候多多观察，就不会出现这种低级错误而影响后续工作。新人就是对所有的事情都要积极，team building 的时候我也不积极，老板自然是想要一个团队融合度高，这种对什么都不积极，然后分内工作又做不好的，自然慢慢就会被边缘化。2018告诉自己，在新的公司新的团队，要对很多事情积极参与，要慢慢建立自己的核心作用和存在感，给别人一种这样的印象：这个团队没有XXX不行。这样，基本算是可以了。&lt;/li&gt;
  &lt;li&gt;多说一点，目光要放长远，很多人三四十岁的时候遭遇中年危机，其实很可能是缺乏计划性的结果，多多结交有经验的人，和他们探讨自己可能发展的方向。这一点身边有几个朋友做的不错，要多多向它们学习。之前选 Android 的方向就不够目光长远，Android 的风口已经过去了，那时候还不明白风口这个东西。慢慢来吧，去积累一些东西，慢慢地就能看得远了。&lt;/li&gt;
  &lt;li&gt;另外就是，对待其他人，态度要谦和，不要动不动就觉得XX是傻逼，一个人再差也有值得佩服的地方，何况比你厉害的人，要多看到别人好的一面。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;找工作&quot;&gt;找工作&lt;/h4&gt;
&lt;p&gt;总结一句：方向没错，努力程度不够。&lt;/p&gt;

&lt;p&gt;前期很幸运地拿到了几家的后端 offer。然后后面的笔试面试就给自己找各种理由拒了。其实校招最想去地方外企反而一家都没有面，这个对自己也挺失望。春招的时候会再投一下试试看。&lt;/p&gt;

&lt;h4 id=&quot;2018计划&quot;&gt;2018计划&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;春招的时候投一些企业试试，在春招之前再努力一波。&lt;/li&gt;
  &lt;li&gt;培养慢跑的习惯，经过2017年底这一病，再次反省身体健康的重要性。&lt;/li&gt;
  &lt;li&gt;在入职以后，培养工作的积极感，争取在技术方面跟上并超过平均步伐，2018年底需要对基本的需求完全可控，在非技术方面要积极参与，争取成为团队精神核心。周末避免瘫在家里，没事的时候请到公司看代码。&lt;/li&gt;
  &lt;li&gt;培养并长期坚持一门爱好，可以是尤克里里或者其他，要达到表演程度。&lt;/li&gt;
  &lt;li&gt;学会做饭，包括但不限于：卤牛肉、猪蹄的各种做法，工作逐渐稳定了可以考虑尝试烘焙和咖啡调制。&lt;/li&gt;
  &lt;li&gt;提前预约宫颈癌九价疫苗。&lt;/li&gt;
  &lt;li&gt;开始培养理财意识。&lt;/li&gt;
  &lt;li&gt;慢慢学会情绪调节。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;其他&quot;&gt;其他&lt;/h4&gt;
&lt;p&gt;这是大体的计划，当然不够具体，日后可能也会有修改。&lt;/p&gt;

&lt;p&gt;不过还是要先对某人说一声：你要求的纪实文学我目前并没有在计划之中，因为我还没想要放弃！&lt;/p&gt;

</description>
        <pubDate>Sun, 31 Dec 2017 17:40:11 +0800</pubDate>
        <link>http://localhost:4000/2017/12/2017%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93&&2018%E5%B1%95%E6%9C%9B/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/2017%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93&&2018%E5%B1%95%E6%9C%9B/</guid>
        
        <category>Plan</category>
        
        
        <category>Summary</category>
        
      </item>
    
      <item>
        <title>“使用Python和TCP协议实现邮件客户端”踩坑553小记</title>
        <description>&lt;p&gt;开始做《Computer Networking: A Top-Down Approach》应用层的编程作业3：邮件客户端。&lt;/p&gt;

&lt;p&gt;题目要求时创建一个能向任何接收方发送电子邮件的简单邮件客户。这个客户需要通过TCP协议与邮件服务器进行连接，然后通过SMTP协议与邮件服务器交换数据。&lt;/p&gt;

&lt;p&gt;好吧，首先套路式地创建 TCP 连接，serverName 自然是我们要进行连接的 SMTP 服务器地址，通过查询我找到了&lt;a href=&quot;http://help.163.com/09/1223/14/5R7P3QI100753VB8.html&quot;&gt;163免费邮客户端设置的POP3、SMTP、IMAP地址&lt;/a&gt;，如图所示：
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-12-19-15136877801688.png&quot; alt=&quot;&quot; /&gt;
所以我们的 serverName 是 smtp.163.com，serverPort 为 SMTP 的默认端口 25。请求发送出去，我们能收到服务器传回来的 &lt;code class=&quot;highlighter-rouge&quot;&gt;220 163.com Anti-spam GT for Coremail System (163com[20141201])&lt;/code&gt;，好的没有问题。&lt;/p&gt;

&lt;h4 id=&quot;坑在哪里&quot;&gt;坑在哪里？&lt;/h4&gt;
&lt;p&gt;按照中文第六版 P82 所形容的 SMTP 交换报文的格式，我创建了以下消息并用 socket 的 send 方法发送：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;“HELO 163.com\r\n”&lt;/li&gt;
  &lt;li&gt;“MAIL FROM: &lt;a href=&quot;mailto:joker@163.com&quot;&gt;joker@163.com&lt;/a&gt;\r\n”&lt;/li&gt;
  &lt;li&gt;“RCPT TO: &lt;a href=&quot;mailto:111000@qq.com&quot;&gt;111000@qq.com&lt;/a&gt;\r\n”&lt;/li&gt;
  &lt;li&gt;“DATA”&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;结果，从第二条开始就出错了。服务器给我返回了：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;220 163.com Anti-spam GT for Coremail System (163com[20141201])

250 OK

553 authentication is required,163 smtp11,D8CowACnytCrxzhaT7gLEQ--.52662S2 1513670571
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;令人沮丧，说需要认证，好吧。&lt;/p&gt;

&lt;h4 id=&quot;出坑&quot;&gt;出坑&lt;/h4&gt;

&lt;p&gt;查了半天资料发现，这是由于 163.com 的&lt;strong&gt;反垃圾邮件&lt;/strong&gt;策略决定的，我们简单地通过这种方式发送的邮件难以通过反垃圾邮件的检测而到达邮箱。所以我们需要增加一个用来认证的 &lt;strong&gt;AUTH LOGIN&lt;/strong&gt; 过程。&lt;/p&gt;

&lt;p&gt;具体实现过程就是，在 &lt;code class=&quot;highlighter-rouge&quot;&gt;MAIL FROM&lt;/code&gt; 之前，添加如下代码：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Auth
clientSocket.send('AUTH LOGIN\r\n')
recv = clientSocket.recv(1024)
print(recv)
if (recv[:3] != '334'):
    print('334 reply not received from server')
 
clientSocket.send((username + '\r\n').encode())
recv = clientSocket.recv(1024).decode()
print(recv)
if (recv[:3] != '334'):
    print('334 reply not received from server')

clientSocket.sendall((password + '\r\n').encode())
recv = clientSocket.recv(1024).decode()
print(recv)
if (recv[:3] != '235'):
    print('235 reply not received from server')
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;而其中的 username 和 password 又是需要 base64 编码的。&lt;/p&gt;

&lt;h4 id=&quot;相关资料&quot;&gt;相关资料&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/welber/article/details/6312610&quot;&gt;python模块之smtplib: 用python发送SSL/TLS安全邮件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/moranzcw/Computer-Networking-A-Top-Down-Approach-NOTES/blob/master/SocketProgrammingAssignment/%E4%BD%9C%E4%B8%9A3-%E9%82%AE%E4%BB%B6%E5%AE%A2%E6%88%B7%E7%AB%AF/source/SMTPClient.py&quot;&gt;作业3-邮件客户端&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 19 Dec 2017 19:30:11 +0800</pubDate>
        <link>http://localhost:4000/2017/12/%E4%BD%BF%E7%94%A8Python%E5%92%8CTCP%E5%8D%8F%E8%AE%AE%E5%AE%9E%E7%8E%B0%E9%82%AE%E4%BB%B6%E5%AE%A2%E6%88%B7%E7%AB%AF-%E8%B8%A9%E5%9D%91%E5%B0%8F%E8%AE%B0/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/%E4%BD%BF%E7%94%A8Python%E5%92%8CTCP%E5%8D%8F%E8%AE%AE%E5%AE%9E%E7%8E%B0%E9%82%AE%E4%BB%B6%E5%AE%A2%E6%88%B7%E7%AB%AF-%E8%B8%A9%E5%9D%91%E5%B0%8F%E8%AE%B0/</guid>
        
        <category>Socket</category>
        
        
        <category>Network</category>
        
      </item>
    
      <item>
        <title>Coursera-Learning How to Learn</title>
        <description>&lt;p&gt;《Learning How to Learn: Powerful mental tools to help you master tough subjects》，Coursera 上我完成的第一门课，疯狂打 call！！！&lt;/p&gt;

&lt;p&gt;考试成绩 97.3%，实在是刷不动第二遍了，因为题目都是英文的且专业词汇很多，本身读的比较慢，考试的27道题，我差不多用了一个番茄加5～10分钟的时间，基本上一分钟一道题吧，考试的很多都是练习原题，为了让我们巩固方法和认知。&lt;/p&gt;

&lt;p&gt;这门课主要是教我们如何学习，从心理学、大脑的生理结构等各种方面阐述了大脑的工作机制以及一些学习方法，比如如何对抗拖延（Procrastination），如何利用僵尸模式（Zombie Mode），如何避免学习中的幻觉（Illusions of Learning)，如何从集中模式（Focused Mode）与发散模式（Diffused Mode）之间进行切换……&lt;/p&gt;

&lt;p&gt;等等等等，解答了我关于学习的非常多的困惑。与此同时，我也学会了很多学习方法。每周都有记英文笔记和生词，就不再放上来了。&lt;/p&gt;

&lt;p&gt;学到了很多方法比如，“Exercise is by far, more effective than any drug on the market today to help you learn better”, “Focus on PROCESS rather than on PRODUCT”, “Use Poromodo to concentrate”, “try to remember things using SPACE MEMORY”…&lt;/p&gt;

&lt;p&gt;还有，睡眠对记忆的影响真的非常深= =睡眠可以潜移默化地把知识点转化为知识块（make a chunk），感谢 Coursera 和这门课的教授，Dr. Barbara Oakley 和 Dr. Terrence Sejnowski，尤其是 Dr. Barbara Oakley，这个二十岁才开始学数学然而现在已经是工程学教授了的女性，十九岁时投掷手榴弹的那一幕真是令我印象深刻。&lt;/p&gt;

&lt;p&gt;最后，通过这门课程，我不仅学到了关于学习的方法并在付诸实践，而且有两个变化令我惊喜：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;我通过英文字幕来观看的大部门课程，看不懂的时候会切换到中文字幕，学会了很多单词（比如拼写 procrastination 拖延症，比如认识“海马体”这种变态的词汇），另外，在最后一周的时候感觉理解英文长句子的能力有了长进和恢复。&lt;/li&gt;
  &lt;li&gt;这是我首门坚持下来并且考完试的 Coursera 课程。虽然中间去台湾旅行导致课程落下了，但是回来之后的几天时间内我补全并非常认真地参加了考试以及每一次练习，且认真的记了笔记。所以说，虽然没有间隔学习，后面我会时不时回头重温并且加以运用的。完成这门课程对我来说意义重大，以后的其他 Coursera 课程我也会更有勇气地学下去。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最后，放一张 Barbara Oakley 的图片吧：
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-12-17-屏幕快照 2017-11-19 上午10.21.14.png&quot; alt=&quot;屏幕快照 2017-11-19 上午10.21.14&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 17 Dec 2017 21:09:11 +0800</pubDate>
        <link>http://localhost:4000/2017/12/Coursera-Learning-How-to-Learn/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/Coursera-Learning-How-to-Learn/</guid>
        
        <category>Learning</category>
        
        
        <category>Coursera</category>
        
      </item>
    
      <item>
        <title>阶段小结（二）</title>
        <description>&lt;h4 id=&quot;12月12日下午开始共6个番茄&quot;&gt;12月12日（下午开始，共6个番茄）&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;看了下《深入分析Java Web技术内幕》的第二章，发现主要涉及到 I/O，于是打算先补齐 Java I/O 内容，主要通过博客、《Thinking in Java》和《Core Java》。耗时3个番茄，全部完成。&lt;/li&gt;
  &lt;li&gt;开始《Learning How to Learn》第二周的学习，耗时2个番茄。&lt;/li&gt;
  &lt;li&gt;有锻炼腹肌。&lt;/li&gt;
  &lt;li&gt;有睡前阅读。&lt;/li&gt;
  &lt;li&gt;有早睡（12点以前）。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;12月13日全天共9个番茄&quot;&gt;12月13日（全天，共9个番茄）&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;9:45到达自习室，也没有很早。&lt;/li&gt;
  &lt;li&gt;《Java Web》第二章，耗时3.5番茄。完成一半内容。包括 I/O 类库基本架构和磁盘 I/O。&lt;/li&gt;
  &lt;li&gt;《Learning How to Learn》耗时3.5番茄，完成第二周全部必需部分内容，测验全部100分，有笔记。这一周主要讲的是 How to form a chunk。&lt;/li&gt;
  &lt;li&gt;Vim 练级一、二部分完成，耗时0.5番茄，基本可以熟练地移动光标和插入删除，在后面写 socket 的编程的过程中有意识地使用 Vim。&lt;/li&gt;
  &lt;li&gt;《Computer Network》0.5番茄。&lt;/li&gt;
  &lt;li&gt;LintCode 开始，1番茄。&lt;/li&gt;
  &lt;li&gt;有锻炼计划第一天。&lt;/li&gt;
  &lt;li&gt;有睡前阅读。读完了阿加莎的《尼罗河上的惨案》，导致早睡失败，反思睡前适合读什么书。&lt;/li&gt;
  &lt;li&gt;没有早睡。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;12月14日全天共11个番茄尤其写实验的时候比较专注&quot;&gt;12月14日（全天，共11个番茄，尤其写实验的时候比较专注）&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;早上来了自习室没网，折腾网的事情到10:30。&lt;/li&gt;
  &lt;li&gt;Vim 练级第三级完成，1番茄。&lt;/li&gt;
  &lt;li&gt;在看《Java Web》的时候，发现涉及到 socket 部分，于是回头补《Computer Network》中应用层部分的实验，耗时5.5番茄，完成 WebServer 和 UDPPing 两个实验（还剩两个）。&lt;/li&gt;
  &lt;li&gt;《Java Web》开了个头，耗时1番茄。&lt;/li&gt;
  &lt;li&gt;《Learning How to Learn》第三周开始，耗时2番茄，开始结合英文字幕学习，虽然比较慢，但相信慢慢会有成果！！本周讲的是 How to tackle procrastination 以及 zombie mode，觉得非常受用。&lt;/li&gt;
  &lt;li&gt;LintCode 再开始，1番茄。&lt;/li&gt;
  &lt;li&gt;帮小朋友处理问题，0.5番茄。&lt;/li&gt;
  &lt;li&gt;晚上发生了一些事情，导致自己突然的情绪变化。无早睡，无睡前阅读，无锻炼。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;小结&quot;&gt;小结&lt;/h4&gt;
&lt;p&gt;在学习习惯方面做的比较好了，&lt;strong&gt;专注力&lt;/strong&gt;也有大幅度上升，对于计划的把控力变强。&lt;/p&gt;

&lt;p&gt;缺点是，依然没有做到良好的早睡早起，需要把锻炼&lt;strong&gt;提前&lt;/strong&gt;安排，睡前阅读的材料需要把控。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use deliberate practice (what you find more difficult).&lt;/strong&gt; 是巩固学习的重要一环，有在慢慢的去做。&lt;/p&gt;

&lt;p&gt;总体来讲，对自己基本满意，从今天开始优先把握&lt;strong&gt;早睡早起+锻炼&lt;/strong&gt;。自己的软肋和调整方案都已经找到，暂时不会再写小结了，等一段时间之后再总结。&lt;/p&gt;

&lt;p&gt;还有一点就是，&lt;strong&gt;不要把困难的事情留到晚上来做&lt;/strong&gt;。因为晚上要早睡，相对来说时间比较紧迫，无法把注意力完全放倒过程上去，尤其是对于算法这种相对有结果的任务来说，适合放到早一点（上午或者下午）的安排中去。&lt;/p&gt;

</description>
        <pubDate>Fri, 15 Dec 2017 12:48:11 +0800</pubDate>
        <link>http://localhost:4000/2017/12/%E9%98%B6%E6%AE%B5%E5%B0%8F%E7%BB%93-%E4%BA%8C/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/%E9%98%B6%E6%AE%B5%E5%B0%8F%E7%BB%93-%E4%BA%8C/</guid>
        
        <category>Plan</category>
        
        
        <category>Summary</category>
        
      </item>
    
      <item>
        <title>Socket编程中遇到的CRLF</title>
        <description>&lt;h3 id=&quot;problem&quot;&gt;Problem&lt;/h3&gt;
&lt;p&gt;先说问题：在 Socket 编程的过程中，我遇到了&lt;code class=&quot;highlighter-rouge&quot;&gt;\r\n\r\n&lt;/code&gt;且不知道为何物，查找资料之后发现背后的故事还是很有趣的，决定拿上来和大家分享。&lt;/p&gt;

&lt;p&gt;今天在尝试补齐之前《Computer Network》的应用层编程作业，第一题是这样的：
要求开发一个简单的 Web 服务器，从浏览器请求一个文件后，我们服务器可以返回这个文件的内容，如果找不到，返回 404。（《Computer Network: A Top-Down Approach Sixth Edition》中文版 P120 作业1）&lt;/p&gt;

&lt;p&gt;然后我在编写响应报文的时候，遇到换行的问题，发现别人的解决方案是&lt;code class=&quot;highlighter-rouge&quot;&gt;\r\n\r\n&lt;/code&gt;，感到疑惑。&lt;/p&gt;

&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;众所周知，一个 HTTP 响应报文的组成是这样的：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
.....
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;第一行是状态行，在返回状态行以后，有一个换行的操作。是这里用了&lt;code class=&quot;highlighter-rouge&quot;&gt;\r\n\r\n&lt;/code&gt;，又称作 &lt;code class=&quot;highlighter-rouge&quot;&gt;CRLF&lt;/code&gt;。
这里涉及到两个内容：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;RFC 文档中规定，HTTP message 中，message-header 和 message-body 中必须间隔两个 CRLF。
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-12-14-15132434255139.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;CRLF 是指&lt;strong&gt;回车（Carriage Return）+换行（Line Feed）&lt;/strong&gt;。我以前一直以为回车和换行是一个概念，真心长见识了。回车的意思是，将当前光标移动到同一行中的最左边；换行的意思是，保持当前光标的水平位置位置不变，换到下一行。这个历史竟然是涉及到一个叫“电传打印机”的玩意儿，我会贴链接在后面，感兴趣的各位可以看一下。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;
&lt;p&gt;依稀记得研一好像有 Socket 编程的实验，当时没认真做，所以现在又踩了这个坑。&lt;/p&gt;

&lt;p&gt;还请各位学霸们多多嘲讽！！！&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10171127/what-is-the-character-of-r-n-r-n-in-nodejs-tcp-ip&quot;&gt;stackoverflow - what is the character of \r\n\r\n in nodejs TCP/IP&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4&quot;&gt;RFC 文档&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.crifan.com/detailed_carriage_return_0x0d_0x0a_cr_lf__r__n_the_context/&quot;&gt;【详解】回车 换行 0x0D 0x0A CR LF \r \n的来龙去脉&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 14 Dec 2017 16:30:11 +0800</pubDate>
        <link>http://localhost:4000/2017/12/Socket%E7%BC%96%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84CRLF/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/Socket%E7%BC%96%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84CRLF/</guid>
        
        <category>Socket</category>
        
        
        <category>Network</category>
        
      </item>
    
      <item>
        <title>阶段小结（一）</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“让我来痛心疾首地总结一下上一个计划的七天我都做了什么。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;信誓旦旦的我-vs-垂头丧气的我&quot;&gt;信誓旦旦的我 VS 垂头丧气的我&lt;/h3&gt;
&lt;p&gt;你不可能知道我写这篇总结用了多大的勇气。&lt;/p&gt;

&lt;p&gt;刚刚结束10天的台湾环岛行回来，带了一身的疲惫。于是我又开始从总结开始了。&lt;/p&gt;

&lt;p&gt;在11月18日这天，我对自己的行为习惯进行了总结和思考，并立下“大志”要总结一下自己的计划执行成果，不知道这句写没写进博客，现在我来挖坟了。（上一个计划内的七天是11月18日到11月24/25日，而我出发开始台湾之旅是11月27日晚上。）&lt;/p&gt;

&lt;p&gt;首先需要声明一下，在这期间的每个下午，2:00到6:00，我是需要练车的，能用来学习的时间是上午和晚上。另外，25号和26号下午是需要考场练车，27号上午进行科目二的考试。&lt;/p&gt;

&lt;h3 id=&quot;目标转化率&quot;&gt;目标转化率&lt;/h3&gt;
&lt;h4 id=&quot;首先在那之后的七天里我做了什么&quot;&gt;首先，在那之后的七天里，我做了什么？&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;关注注意力的转移并寻找替代行为 -&amp;gt; 我随身带了 kindle。&lt;/li&gt;
  &lt;li&gt;关注注意力的转移并寻找替代行为 -&amp;gt; 我把在做的重要事项用便利贴写下来，放在电脑屏幕旁边。这对我来说是很便于集中精力的，我不只把它们放在电脑旁边，甚至有时候会列好一整天要做的事情在便利贴上，然后逐项完成。这点让我很高效，尤其在准备旅行的过程中，完成了诸如办理华夏银行卡、干洗大衣等一系列本来可能不会被完成的事情。&lt;/li&gt;
  &lt;li&gt;关注注意力的转移并寻找替代行为 -&amp;gt; 工作时把手机调成震动，倒扣过来。这点完成得较好。&lt;/li&gt;
  &lt;li&gt;坚持运动。我在11月21日晚上22:13分完成了一个志得意满的三公里跑并在11月22日完成了《马甲线养成》的第一次训练，且在当天发朋友圈表示30s的 plank 真特么难，随后果不其然地受到了小伙伴的鄙视。&lt;/li&gt;
  &lt;li&gt;试试用时+拉回+备忘的方法。 这个方法我用了，非常好用。我发现自己在每段学习时间内第一个番茄钟时，需要被拉回的次数最多，而且一般想起来的不是需要备注的事情，只是纯粹的拉回。&lt;/li&gt;
  &lt;li&gt;看书的时候先看目录，再看章后习题，最后根据题目中名词去看内容。解决了我看书学习的一大困惑。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;其次在那之后的七天里我做失败了什么&quot;&gt;其次，在那之后的七天里，我做失败了什么？&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;我虽然随身带了 kindle，但只读完了一本《萤火虫小巷》，并且没有写书评。更糟糕的是，我原本计划要读的《谈判力》，只读了10%。&lt;/li&gt;
  &lt;li&gt;遗憾的是，除了11月21日和11月22日，其他时间我并没有进行锻炼。并且在受到小伙伴鄙视之后，第二天依然没有进行训练。&lt;/li&gt;
  &lt;li&gt;那么在七天里我进行了多少次需要使用用时+拉回+备忘的学习训练呢？四天，18、19、21、22。刚看了记录发现，竟然有好几天我是把早上睡过去了的，另外有几天也没有起来，晚上的时间做攻略，所以没有学习？？？好吧这就是我。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;我的计划完成的怎么样&quot;&gt;我的计划完成的怎么样？&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;完成 UCSD 第一周的课程。OK，完成了。可惜出去玩的时间度过了第二周，现在我不得不继续追赶第二周和第三周的课程。&lt;/li&gt;
  &lt;li&gt;结合《自顶向下》的内容，复习《深入分析Java Web技术内幕》第一章。OK，完成了。并且还写了一篇博客，算是超额完成。负载均衡的内容也仔细看了，但理解还需时日。&lt;/li&gt;
  &lt;li&gt;学习《深入分析Java Web技术内幕》第二章。No，一点都没有做。&lt;/li&gt;
  &lt;li&gt;项目实战，每天一节。No，好像…只做了一节？&lt;/li&gt;
  &lt;li&gt;其他的：准备生日礼物，完成；订台湾机票+酒店，在队友的 push 下才完成。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;我为什么做成功了失败了&quot;&gt;我为什么做成功了/失败了？&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;更喜欢高刺激的视频、朋友圈以及打游戏，难以把注意力转移到看书上面。&lt;/li&gt;
  &lt;li&gt;没有早睡，导致无法早起，身体虚弱因而无法锻炼。&lt;/li&gt;
  &lt;li&gt;同样，没有自习的原因就是无法早起，上午时间全部浪费，有的时候下午练完车确实比较累了。&lt;/li&gt;
  &lt;li&gt;疲劳的时候不要直接躺下玩手机，先去洗澡。这点完全没有做到。&lt;/li&gt;
  &lt;li&gt;还有一些客观因素，比如有些需要跑腿的事情，下午要练车，所以上午要去做，而去考场的那两天比较累，有一天还是骑单车回来的，所以应该早点休息才对。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;我现在要马上去做什么&quot;&gt;我现在要马上去做什么？&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;首先学会读书，从现在开始，每晚睡前阅读半小时，三天后打卡。&lt;/li&gt;
  &lt;li&gt;其次坚持运动。昨天照镜子看到自己嘴唇发灰被吓了一跳，今天开始坚持跑步或腹肌训练三天，来打卡。&lt;/li&gt;
  &lt;li&gt;坚持使用便利贴。&lt;/li&gt;
  &lt;li&gt;坚持使用用时+拉回+备忘的学习训练方法，并配合番茄钟进行严格的休息。&lt;/li&gt;
  &lt;li&gt;坚持使用先看目录、再看习题、最后根据名词看内容的学习方法。&lt;/li&gt;
  &lt;li&gt;疲劳的时候不要直接躺下玩手机，先去洗澡。&lt;/li&gt;
  &lt;li&gt;早睡早起！！！！！最后也是最重要！！！！！&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 12 Dec 2017 12:48:11 +0800</pubDate>
        <link>http://localhost:4000/2017/12/%E9%98%B6%E6%AE%B5%E5%B0%8F%E7%BB%93-%E4%B8%80/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/%E9%98%B6%E6%AE%B5%E5%B0%8F%E7%BB%93-%E4%B8%80/</guid>
        
        <category>Plan</category>
        
        
        <category>Summary</category>
        
      </item>
    
      <item>
        <title>理解DNS服务</title>
        <description>&lt;p&gt;结合这两天看的东西，突发奇想写篇以“是什么-为什么-怎么用”为主线的 DNS 服务理解。
主要参考书籍为《计算机网络：自顶向下方法》和《深入分析Java Web技术内幕》。&lt;/p&gt;

&lt;h3 id=&quot;是什么&quot;&gt;是什么&lt;/h3&gt;
&lt;p&gt;首先我们抛出问题：DNS 是什么？&lt;/p&gt;

&lt;p&gt;我引用维基百科的原话：域名系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS 使用 TCP 和 UDP 端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。&lt;/p&gt;

&lt;p&gt;短短几行，包含了不少内容，我抓重点来说，DNS 的作用就是&lt;strong&gt;域名和 IP 地址的相互映射&lt;/strong&gt;。那么，为什么要让域名和 IP 地址相互映射呢？下面让我们从原因出发，了解 DNS 服务。&lt;/p&gt;

&lt;h3 id=&quot;为什么&quot;&gt;为什么&lt;/h3&gt;
&lt;p&gt;换一种说法，引用《计算机网络：自顶向下方法》中的小节标题来定义：&lt;strong&gt;DNS 是互联网的目录服务&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;这个说法我是非常同意的。&lt;/p&gt;

&lt;p&gt;我们知道，域名即主机名。主机名- IP 地址的关系可以类比为姓名-身份证号的关系。我们想要访问一台主机，需要知道它的主机名，就像我们在找人的时候需要知道这个人的姓名一样，当然对于人来讲，通过身份证号我们也可以找到他，但大多数人不会这么做。为什么呢？因为不好记呀。对于主机也是一样的，因为 Web 应用的主要使用者就是我们，我们很难把 IP 地址这种一长串的数字记住，所以用主机名来标志它。而对于计算机或者路由器来说，32位的等长二进制则比不定长的字符串好处理的多（尤其是根据 IP 地址划分子网等行为会影响路由器的转发过程）。因此，我们需要二者之间的转换，也就是 DNS 服务。&lt;/p&gt;

&lt;h3 id=&quot;怎么用&quot;&gt;怎么用&lt;/h3&gt;
&lt;p&gt;知道了 DNS 是什么，以及为什么要使用 DNS 以后，我们需要来看下 DNS 具体是怎样使用的，它的工作过程是什么。&lt;/p&gt;

&lt;h4 id=&quot;怎么设计的&quot;&gt;怎么设计的&lt;/h4&gt;
&lt;p&gt;最简单的想法：在整个因特网上只使用一个 DNS 服务器。&lt;/p&gt;

&lt;p&gt;这样可能会出现很多问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;单点故障。考虑下该 DNS 服务器崩溃的情况？&lt;/li&gt;
  &lt;li&gt;通信容量。该 DNS 服务器需要处理所有的 DNS 查询。&lt;/li&gt;
  &lt;li&gt;远距离的集中式数据库。假如说该 DNS 服务器被放在北美，而我们从中国访问？中间或许要经过许多低速和拥塞的链路。想想就觉得很扎心吧。&lt;/li&gt;
  &lt;li&gt;维护。为所有的互联网主机保存记录。想下这个数据库得有多大？而且还会频繁发生变化。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;综合以上几点，不可能使用集中式数据库。所以 DNS 的设计采用了分布式的设计方案。也就是说，DNS 是一个在因特网上实现的&lt;strong&gt;分布式数据库&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-22-DNS层次结构.png&quot; alt=&quot;DNS层次结构&quot; /&gt;
DNS 的层次结构如上图。大致把 DNS 服务器分为三种类型：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;根 DNS 服务器（最上面一层）&lt;/li&gt;
  &lt;li&gt;顶级 DNS （General top-level domain，缩写为 gTLD）服务器（第二层）&lt;/li&gt;
  &lt;li&gt;权威 DNS 服务器（第三层）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，还有一类叫本地 DNS （Local DNS，缩写为 LDNS)服务器。每个 ISP 都有一台 LDNS。&lt;/p&gt;

&lt;h4 id=&quot;怎么查询解析的&quot;&gt;怎么查询（解析）的&lt;/h4&gt;
&lt;p&gt;这个问题可以转化为：当一个用户在浏览器中输入 www.baidu.com 并按下回车时，DNS 解析过程是什么？
首先，我们考虑缓存。DNS 的结果缓存有以下几种：
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-22-DNS结果缓存.png&quot; alt=&quot;DNS结果缓存&quot; /&gt;&lt;/p&gt;

&lt;p&gt;缓存检查过程：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;浏览器会检查缓存中有没有域名对应的解析过的 IP 地址，如果有，解析过程结束。&lt;/li&gt;
  &lt;li&gt;如果浏览器缓存中没有，浏览器会查找操作系统缓存中是否有对应的结果，也就是检查 hosts 文件中是否存在该域名对应的 IP 地址。（在 Windows 中 hosts 文件路径为 C:\Windows\System32\drivers\etc\hosts，在 Linux 中为 /etc/hosts）&lt;/li&gt;
  &lt;li&gt;如果前两个步骤都得不到结果，那么用户主机会向 LDNS（上面提到的 本地 DNS 服务器）发送一个 DNS 查询报文，此时查询 LDNS 的缓存。（在 Windows 下可以通过 ipconfig 查看 LDNS，在 Linux 中从 /etc/resolv.conf 文件中查看。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;80% 的域名解析过程到上面三步就结束了。还没有命中结果的话，需要继续以下流程。
DNS 服务器分层查询过程（递归查询 + 迭代查询）：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;如果 LDNS 服务器依然没有命中（第三步），LDNS 服务器会把查询报文转发到根 DNS 服务器。&lt;/li&gt;
  &lt;li&gt;根 DNS 服务器注意到 com 前缀并向 LDNS 返回负责查询域 com 的 gTLD 的 IP 地址列表。&lt;/li&gt;
  &lt;li&gt;该 LDNS 再向上一部返回的 gTLD 之一发送查询报文。&lt;/li&gt;
  &lt;li&gt;gTLD 服务器查找并返回此域名对应的权威 DNS 服务器（可能是某个大学／公司的域名服务器，如上图所示，例如 dns.baidu.com），这个域名服务器通常是你注册的域名服务器。&lt;/li&gt;
  &lt;li&gt;权威 DNS 服务器会查询域名和 IP 地址的映射关系表，在正常情况下得到目标 IP 地址后，连同一个 TTL 值返回给 LDNS 服务器。&lt;/li&gt;
  &lt;li&gt;返回该域名对应的 IP 和 TTL 值，LDNS 会缓存这个域名和 IP 的对应关系，缓存的时间由 TTL 值控制。&lt;/li&gt;
  &lt;li&gt;把解析的结果返回给用户，用户根据 TTL 值缓存在本地系统缓存中，域名解析过程结束。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;注：在这里我们假设了 gTLD 服务器知道用于主机的权威 DNS 服务器的 IP 地址。但在实际情况中，可能要经过若干个中间的 DNS 服务器，才能知道该权威 DNS 服务器的 IP，所以不止上述几步。&lt;/p&gt;

&lt;p&gt;下面我通过图来展示 DNS 服务器分层查询的过程：
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-22-DNS查询过程.png&quot; alt=&quot;DNS查询过程&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到，从 1 发出的查询为递归查询，后续三个查询（2、4、6）为迭代查询。&lt;/p&gt;

&lt;h3 id=&quot;小结&quot;&gt;小结&lt;/h3&gt;
&lt;p&gt;以上几部分是我按照一定的逻辑思维顺序，结合书籍与自己的理解给出的 DNS 服务的有关内容。图片部分是我用 processon 和百度脑图自己画的。&lt;/p&gt;

&lt;p&gt;对 DNS 服务的理解大致到此了。如果有什么疑问，欢迎大家留言。&lt;/p&gt;

</description>
        <pubDate>Sat, 18 Nov 2017 13:20:11 +0800</pubDate>
        <link>http://localhost:4000/2017/11/%E7%90%86%E8%A7%A3DNS%E6%9C%8D%E5%8A%A1/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/%E7%90%86%E8%A7%A3DNS%E6%9C%8D%E5%8A%A1/</guid>
        
        <category>DNS</category>
        
        
        <category>Network</category>
        
      </item>
    
      <item>
        <title>关于习惯养成的思考</title>
        <description>&lt;p&gt;很遗憾，这篇博客依然不是关于技术或者是奇怪的安装配置步骤。&lt;/p&gt;

&lt;p&gt;是关于自己习惯养成的思考。&lt;/p&gt;

&lt;p&gt;最近接受到很多来自自己内心的拷问和审视，以至于不得不重视起类似规划和自我实现这样的问题。我去知乎搜了“心理学”的有关分类，得到了很多有用的东西。&lt;/p&gt;

&lt;h4 id=&quot;是什么--为什么&quot;&gt;是什么 &amp;amp;&amp;amp; 为什么？&lt;/h4&gt;
&lt;p&gt;我所焦虑的东西，我关于自身的思考，究竟是什么？是什么让我无法安静做事？&lt;/p&gt;

&lt;p&gt;为什么这些因素会导致我无法集中精力，做我以为我该做的事情？&lt;/p&gt;

&lt;p&gt;我的目标是什么？我想要做什么样的事情？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/56000916&quot;&gt;生活中有哪些坏习惯一旦改正就能带来立竿见影的好处？edmond的回答&lt;/a&gt;
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-18-1-3.jpeg&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-18-2-2.jpeg&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/57332899&quot;&gt;怎样从高刺激的娱乐状态中静下心来，适应低刺激/枯燥的学习或工作？walfalcon的回答&lt;/a&gt;
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-18-3-2.jpeg&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/23819007&quot;&gt;你有什么道理后悔没有早点知道？廖炜的回答&lt;/a&gt;
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-18-4-2.jpeg&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/28184567&quot;&gt;为什么嗑瓜子可以嗑半个小时甚至一个小时以上，看书学习却不可以？ze ran的回答&lt;/a&gt;
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-18-5-2.jpeg&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/30178891&quot;&gt;有哪些让人欲罢不能的学习方法？恒变的回答&lt;/a&gt;
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-18-6-2.jpeg&quot; alt=&quot;6&quot; /&gt;
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-18-7-3.jpeg&quot; alt=&quot;7&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;怎么办&quot;&gt;怎么办&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;从 edmond 的回答中，我找到了原因：其实是一种叫做&lt;code class=&quot;highlighter-rouge&quot;&gt;“高刺激“&lt;/code&gt;的东西，在影响我所有的状态，是我焦虑的源头。&lt;/li&gt;
  &lt;li&gt;从 walfalcon 的回答中，我找到了开始的几个好办法：
    &lt;ul&gt;
      &lt;li&gt;减少刺激的来源。我关掉了豆瓣的通知，微信的是一直没有开，朋友圈也是关闭了一段时间了。其实之前有意识到这个问题吧，只是不知道问题的根源在哪里。另外，&lt;code class=&quot;highlighter-rouge&quot;&gt;在电脑上少开弹出提示的软件&lt;/code&gt;这点一直没有做到，现在开始尝试了。&lt;/li&gt;
      &lt;li&gt;关注注意力的转移并寻找替代行为。
        &lt;ul&gt;
          &lt;li&gt;随身带 kindle，用 kindle 来代替手机，用一切空闲时间来阅读。正好我有 kindle，正有此意。在这里，除了之前买了阿加莎的几本推理小说以外，其他书准备参考 &lt;a href=&quot;https://www.zhihu.com/question/28070036&quot;&gt;有哪些可以提升情商、判断力和谈话技巧的书籍？寺主人的回答&lt;/a&gt; 进行阅读，比如《沟通的艺术》、《学会提问》。无论是从实习来看也好，日常与同学朋友的交流来看也好，情商都是一个非常重要的东西，自认为非常欠缺，并且有时候会略有些自负（哪来的脸）。&lt;/li&gt;
          &lt;li&gt;在电脑上工作时把在做的重要事项用彩色的即时贴写下来，放在电脑屏幕上或屏幕跟键盘之间。这对我来说非常有用，即使是在电脑上工作的时候，我也很容易会走神分心。&lt;/li&gt;
          &lt;li&gt;在工作学习时把手机调成震动，倒扣过来，并放到自己看不到的地方。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;坚持运动。“通过100天行动，发现运动和冥想对注意力的改变最为直接。运动可以让你发泄多余的精力，可以让你减少攻击性，降低脑内的杂音，刺激荷尔蒙分泌和神经传导，使身体平静下来，具有很好的治疗效果。”&lt;/li&gt;
      &lt;li&gt;可以试试冥想。&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NjA3OTM0MA==&amp;amp;mid=203934073&amp;amp;idx=1&amp;amp;sn=fce851ece314dbc01ddc1f6a6e959e51&amp;amp;scene=21#wechat_redirect&quot;&gt;增加注意力小技巧—-观察自己的呼吸&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;试试用时+拉回+备忘的方法。 &lt;a href=&quot;https://www.zhihu.com/question/57332899&quot;&gt;怎样从高刺激的娱乐状态中静下心来，适应低刺激/枯燥的学习或工作？瓜皮结衣的回答&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;小结&quot;&gt;小结&lt;/h4&gt;
&lt;p&gt;此篇是很多念头的综合体，以及笔记备忘。并不是所有的方法都会选择，但肯定会去做，具体情况我会记录在本子上。一周后我会更博反馈下执行情况。&lt;/p&gt;

&lt;h4 id=&quot;题外话&quot;&gt;题外话&lt;/h4&gt;
&lt;p&gt;最近博客的“废话”很多，有两个原因。&lt;/p&gt;

&lt;p&gt;其中一个原因是，MWeb + 七牛云（无障碍的写作工具）+ 一个漂亮的博客主题，极大程度上增加了我的写博冲动。（某熊同学说，看你一个月后冲动还剩多少。hhh欢迎监督，我也不敢保证哦）&lt;/p&gt;

&lt;p&gt;另外一个原因是，我纠正了以前自己的一个错误观点，之前看过很多大牛的博客，也会觉得“哎如果我能写出这么厉害的博客来就好了”，才发现这种想法有如空中楼阁。理由如下：一，发现写作能力不可或缺，不管是以后厉害的技术博客，还是公司里的 wiki，或者仅仅是单纯的表达能力，都是非常重要的，而写博客是一个很好的提升机会；二，发现博客如同一个系统，我们都知道，任何复杂的系统都是由一个非常简单的系统逐步演化而来的，而如果你连一个简单的系统都懒得搭，又如何能指望自己成为架构专家呢？&lt;/p&gt;

&lt;p&gt;鉴于以上几个原因，我会尽量分享我认为对自己、对大家有价值的东西，以试图将其完整地表达出来。&lt;/p&gt;

</description>
        <pubDate>Sat, 18 Nov 2017 13:20:11 +0800</pubDate>
        <link>http://localhost:4000/2017/11/%E5%85%B3%E4%BA%8E%E4%B9%A0%E6%83%AF%E5%85%BB%E6%88%90%E7%9A%84%E6%80%9D%E8%80%83/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/%E5%85%B3%E4%BA%8E%E4%B9%A0%E6%83%AF%E5%85%BB%E6%88%90%E7%9A%84%E6%80%9D%E8%80%83/</guid>
        
        <category>Thougnts</category>
        
        
        <category>Thoughts</category>
        
      </item>
    
      <item>
        <title>小记一则</title>
        <description>&lt;p&gt;今天其实状态还不错，趁着手热，一口气搞定了博客的图床，顺便又传了一篇不算是技术文档的文档。&lt;/p&gt;

&lt;p&gt;最近几天都在持续地搞一些和博客有关的东西，比如配置 Disqus 评论、添加 Google 索引。今天则利用下午时间完成了 WizNote -&amp;gt; MWeb 编辑器的转变，稍微看了下 MWeb 的文档。&lt;/p&gt;

&lt;p&gt;另外就是，发的新博客里面是带有图片的，这涉及到下午的另一个操作：MWeb + 七牛云的图床。发现 MWeb 确实是写博客的不二之选，配置好了图床之后，再也不怕插图片麻烦了：）&lt;/p&gt;

&lt;p&gt;还有，今天发现朋友们的算法薪资都好高，有点不甘落后吧。现在好好蓄力，年后需要再投一波。
（发现自己的计划总是太糙，补充几个蓄力的点如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;基础知识：
    &lt;ul&gt;
      &lt;li&gt;《计算机网络自顶向下方法》，写得很好的一本书，举例很多很形象，目前是刚看到运输层，要看完。&lt;/li&gt;
      &lt;li&gt;《深入分析Java Web技术内幕》，觉得很适合我这种初学者看，内容涵盖 Java Web 的各个方面，目前刚开始看，在负载均衡的地方理解遇到一点小问题，以及 DNS 部分需要结合网络来看。需要看完。&lt;/li&gt;
      &lt;li&gt;《深入理解计算机系统》，可选。要结合聚聚的博客来学习。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;项目：
    &lt;ul&gt;
      &lt;li&gt;目前在结合另一位聚聚的博客开始做 Java Web 的入门级项目。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;总之，路还很长，加油啦！&lt;/p&gt;

&lt;p&gt;此外，今天关于面试选择的问题，收到了朋友的毒鸡汤一枚，扎心了：
&lt;img src=&quot;http://ozjtrx3vo.bkt.clouddn.com/2017-11-17-毒鸡汤.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 17 Nov 2017 15:50:11 +0800</pubDate>
        <link>http://localhost:4000/2017/11/%E5%B0%8F%E8%AE%B0%E4%B8%80%E5%88%99/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/%E5%B0%8F%E8%AE%B0%E4%B8%80%E5%88%99/</guid>
        
        <category>Thougnts</category>
        
        
        <category>Thoughts</category>
        
      </item>
    
  </channel>
</rss>
